import React, { useState } from 'react'; import './App.css'; // Import the App.css file for styles // Initial Sudoku Board const InitialBoard = [ [5, 3, 0, 0, 7, 0, 0, 0, 0], [6, 0, 0, 1, 9, 5, 0, 0, 0], [0, 9, 8, 0, 0, 0, 0, 6, 0], [8, 0, 0, 0, 6, 0, 0, 0, 3], [4, 0, 0, 8, 0, 3, 0, 0, 1], [7, 0, 0, 0, 2, 0, 0, 0, 6], [0, 6, 0, 0, 0, 0, 2, 8, 0], [0, 0, 0, 4, 1, 9, 0, 0, 5], [0, 0, 0, 0, 8, 0, 0, 7, 9], ]; function SudokuBoard() { const [board, setBoard] = useState(InitialBoard); // State to hold the board // Function to handle the input change const handleChange = (e, rowIndex, cellIndex) => { const value = e.target.value; if (value === '' || /^[1-9]$/.test(value)) { // Ensure only numbers 1-9 or empty string are allowed const newBoard = [...board]; // Create a copy of the board newBoard[rowIndex][cellIndex] = value === '' ? 0 : parseInt(value); // Update the specific cell with the new value setBoard(newBoard); // Set the new board state } }; const handleRefresh = () => { const refreshedBoard = InitialBoard.map(row => row.map(cell => (cell !== 0 ? cell : 0)) // Keep default numbers intact, reset others to 0 ); setBoard(refreshedBoard);  // Update the board state with the refreshed board }; return ( <div className="board"> {board.map((row, rowIndex) => ( <div key={rowIndex} className="row"> {row.map((cell, cellIndex) => ( <div key={cellIndex} className="cell"> {cell !== 0 ? ( // Display number if cell value is not 0 cell ) : ( // Display input if cell value is 0 <input type="number" value={cell === 0 ? '' : cell} // Display empty input when cell is 0 onChange={(e) => handleChange(e, rowIndex, cellIndex)} // Update board when input changes min="1" max="9" maxLength="1" // Limit input to 1 digit className="cell-input" /> )} </div> ))} </div> ))} <button className="refresh" onClick={handleRefresh}>Refresh</button> </div> ); } export default SudokuBoard;